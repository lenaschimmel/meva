//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /home/lena/meva/issuemap.module/ios/cpy/de/gmino/geobase/shared/map/components/MevaMarkersReadOnly.java
//
//  Created by lena on 24.06.13.
//

#import "de/gmino/geobase/shared/domain/GeoObject.h"
#import "de/gmino/geobase/shared/domain/ImageUrl.h"
#import "de/gmino/geobase/shared/domain/LatLon.h"
#import "de/gmino/geobase/shared/domain/LatLonRect.h"
#import "de/gmino/geobase/shared/domain/gen/GeoObjectGen.h"
#import "de/gmino/geobase/shared/map/Event.h"
#import "de/gmino/geobase/shared/map/MapView.h"
#import "de/gmino/geobase/shared/map/Marker.h"
#import "de/gmino/geobase/shared/map/MarkerLayer.h"
#import "de/gmino/geobase/shared/map/components/MevaMarkersReadOnly.h"
#import "de/gmino/geobase/shared/request/QueryGeoObject.h"
#import "de/gmino/meva/shared/EntityQuery.h"
#import "de/gmino/meva/shared/EntityTypeName.h"
#import "de/gmino/meva/shared/request/Requests.h"
#import "java/util/Collection.h"
#import "java/util/Iterator.h"

@implementation DeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly

@synthesize mapView = mapView_;
@synthesize overlay = overlay_;

- (id)initWithDeGminoGeobaseSharedMapMapView:(id<DeGminoGeobaseSharedMapMapView>)mapview {
  if ((self = [super init])) {
    self.mapView = mapview;
    overlay_ = [((id<DeGminoGeobaseSharedMapMapView>) NIL_CHK(mapView_)) newMarkerLayerWithNSString:@"Meva Markers"];
    [((id<DeGminoGeobaseSharedMapMapView>) NIL_CHK(mapView_)) addLayerWithDeGminoGeobaseSharedMapMapLayer:overlay_];
    [((id<DeGminoGeobaseSharedMapMapView>) NIL_CHK(mapView_)) addEventListenerWithDeGminoGeobaseSharedMapEventEnum:[DeGminoGeobaseSharedMapEventEnum zoom] withDeGminoGeobaseSharedMapMapListener:self];
    [((id<DeGminoGeobaseSharedMapMapView>) NIL_CHK(mapView_)) addEventListenerWithDeGminoGeobaseSharedMapEventEnum:[DeGminoGeobaseSharedMapEventEnum move] withDeGminoGeobaseSharedMapMapListener:self];
    [self loadMarkers];
  }
  return self;
}

- (void)loadMarkers {
  DeGminoGeobaseSharedDomainLatLon *myLocation = [[DeGminoGeobaseSharedDomainLatLon alloc] initWithDouble:52.2723 withDouble:10.53547];
  id<DeGminoMevaSharedEntityQuery> q = [[DeGminoGeobaseSharedRequestQueryGeoObject alloc] initWithDeGminoGeobaseSharedDomainLatLonRect:[((id<DeGminoGeobaseSharedMapMapView>) NIL_CHK(mapView_)) getVisibleArea] withInt:100];
  [DeGminoMevaSharedRequestRequests getLoadedEntitiesByQueryWithDeGminoMevaSharedEntityTypeName:[DeGminoGeobaseSharedDomainGenGeoObjectGen type] withDeGminoMevaSharedEntityQuery:q withDeGminoMevaSharedRequestRequestListener:[[DeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly_$1 alloc] initWithDeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly:self]];
}

- (void)onEventWithDeGminoGeobaseSharedDomainLatLon:(DeGminoGeobaseSharedDomainLatLon *)location
               withDeGminoGeobaseSharedMapEventEnum:(DeGminoGeobaseSharedMapEventEnum *)event {
  if ([((DeGminoGeobaseSharedMapEventEnum *) NIL_CHK(event)) isChangingView]) [self loadMarkers];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  DeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly *typedCopy = (DeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly *) copy;
  typedCopy.mapView = mapView_;
  typedCopy.overlay = overlay_;
}

@end
@implementation DeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly_$1

@synthesize this$0 = this$0_;

- (void)onFinishedWithJavaUtilCollection:(id<JavaUtilCollection>)objects {
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilCollection>) NIL_CHK(objects)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      DeGminoGeobaseSharedDomainGeoObject *object = ((DeGminoGeobaseSharedDomainGeoObject *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      id<DeGminoGeobaseSharedMapMarker> marker = [((id<DeGminoGeobaseSharedMapMarkerLayer>) NIL_CHK(this$0_.overlay)) newMarkerWithDeGminoGeobaseSharedDomainLatLon:[((DeGminoGeobaseSharedDomainGeoObject *) NIL_CHK(object)) getLocation] withNSString:[((DeGminoGeobaseSharedDomainGeoObject *) NIL_CHK(object)) getTitle] withNSString:[((DeGminoGeobaseSharedDomainGeoObject *) NIL_CHK(object)) getDescription] withDeGminoGeobaseSharedDomainImageUrl:[((DeGminoGeobaseSharedDomainGeoObject *) NIL_CHK(object)) getMarkerImage]];
      [((id<DeGminoGeobaseSharedMapMarkerLayer>) NIL_CHK(this$0_.overlay)) addMarkerWithDeGminoGeobaseSharedMapMarker:marker];
    }
  }
}

- (id)initWithDeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly:(DeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly *)outer$ {
  if ((self = [super init])) {
    this$0_ = outer$;
  }
  return self;
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  DeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly_$1 *typedCopy = (DeGminoGeobaseSharedMapComponentsMevaMarkersReadOnly_$1 *) copy;
  typedCopy.this$0 = this$0_;
}

@end
