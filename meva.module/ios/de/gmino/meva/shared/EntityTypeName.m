//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /home/lena/meva/issuemap.module/ios/cpy/de/gmino/meva/shared/EntityTypeName.java
//
//  Created by lena on 24.06.13.
//

#import "de/gmino/meva/shared/EntityTypeName.h"
#import "java/lang/ClassCastException.h"
#import "java/util/Map.h"
#import "java/util/TreeMap.h"

@implementation DeGminoMevaSharedEntityTypeName

static id<JavaUtilMap> DeGminoMevaSharedEntityTypeName_types_;

@synthesize typeName = typeName_;

+ (id<JavaUtilMap>)types {
  return DeGminoMevaSharedEntityTypeName_types_;
}

+ (void)setTypes:(id<JavaUtilMap>)types {
  DeGminoMevaSharedEntityTypeName_types_ = types;
}

- (id)initWithNSString:(NSString *)typeName {
  if ((self = [super init])) {
    self.typeName = typeName;
  }
  return self;
}

- (NSString *)description {
  return typeName_;
}

+ (DeGminoMevaSharedEntityTypeName *)getByStringWithNSString:(NSString *)typeName {
  DeGminoMevaSharedEntityTypeName *ret = ((DeGminoMevaSharedEntityTypeName *) [((id<JavaUtilMap>) NIL_CHK(DeGminoMevaSharedEntityTypeName_types_)) getWithId:typeName]);
  if (ret == nil) {
    ret = [[DeGminoMevaSharedEntityTypeName alloc] initWithNSString:typeName];
    (void) [((id<JavaUtilMap>) NIL_CHK(DeGminoMevaSharedEntityTypeName_types_)) putWithId:typeName withId:ret];
  }
  return ret;
}

- (int)compareToWithId:(DeGminoMevaSharedEntityTypeName *)that {
  if (that != nil && ![that isKindOfClass:[DeGminoMevaSharedEntityTypeName class]]) {
    @throw [[JavaLangClassCastException alloc] init];
  }
  return [NIL_CHK(self.typeName) compareToWithId:((DeGminoMevaSharedEntityTypeName *) NIL_CHK(that)).typeName];
}

+ (void)initialize {
  if (self == [DeGminoMevaSharedEntityTypeName class]) {
    DeGminoMevaSharedEntityTypeName_types_ = [[JavaUtilTreeMap alloc] init];
  }
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  DeGminoMevaSharedEntityTypeName *typedCopy = (DeGminoMevaSharedEntityTypeName *) copy;
  typedCopy.typeName = typeName_;
}

@end
