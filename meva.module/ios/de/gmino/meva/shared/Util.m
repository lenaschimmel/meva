//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /home/lena/meva/issuemap.module/ios/cpy/de/gmino/meva/shared/Util.java
//
//  Created by lena on 24.06.13.
//

#import "IOSObjectArray.h"
#import "de/gmino/meva/shared/Util.h"
#import "de/gmino/meva/shared/UtilImpl.h"
#import "java/lang/Math.h"
#import "java/lang/RuntimeException.h"

@implementation DeGminoMevaSharedUtil

static id<DeGminoMevaSharedUtilImpl> DeGminoMevaSharedUtil_impl_;

+ (id<DeGminoMevaSharedUtilImpl>)impl {
  return DeGminoMevaSharedUtil_impl_;
}

+ (void)setImpl:(id<DeGminoMevaSharedUtilImpl>)impl {
  DeGminoMevaSharedUtil_impl_ = impl;
}

+ (void)setImplWithDeGminoMevaSharedUtilImpl:(id<DeGminoMevaSharedUtilImpl>)impl {
  DeGminoMevaSharedUtil_impl_ = impl;
}

+ (NSString *)formatWithNSString:(NSString *)formatString
               withNSObjectArray:(IOSObjectArray *)arguments {
  if (DeGminoMevaSharedUtil_impl_ == nil) @throw [[JavaLangRuntimeException alloc] initWithNSString:@"You must first pimpl the impl!"];
  return [((id<DeGminoMevaSharedUtilImpl>) NIL_CHK(DeGminoMevaSharedUtil_impl_)) formatWithNSString:formatString withNSObjectArray:arguments];
}

+ (NSString *)getBaseUrl {
  if (DeGminoMevaSharedUtil_impl_ == nil) @throw [[JavaLangRuntimeException alloc] initWithNSString:@"You must first pimpl the impl!"];
  return [((id<DeGminoMevaSharedUtilImpl>) NIL_CHK(DeGminoMevaSharedUtil_impl_)) getBaseUrl];
}

+ (id)randomElementFromWithNSObjectArray:(IOSObjectArray *)array {
  return [((IOSObjectArray *) NIL_CHK(array)) objectAtIndex:(int) (0.999 * [JavaLangMath random] * (int) [((IOSObjectArray *) NIL_CHK(array)) count])];
}

+ (NSString *)capitalizeFirstWithNSString:(NSString *)str {
  return [NSString stringWithFormat:@"%@%@", [[NIL_CHK(str) substring:0 endIndex:1] uppercaseString], [NIL_CHK(str) substring:1]];
}

+ (NSString *)escapeForJsonWithNSString:(NSString *)unescaped {
  if (unescaped == nil) return nil;
  return [[[[NIL_CHK(unescaped) replace:@"\\" withSequence:@"\\\\"] replace:@"\"" withSequence:@"\\\""] replace:@"\n" withSequence:@"\\n"] replace:@"\r" withSequence:@"\\n"];
}

- (id)init {
  return [super init];
}

@end
