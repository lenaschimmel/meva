//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /home/lena/meva/issuemap.module/ios/cpy/de/gmino/meva/shared/EntityFactory.java
//
//  Created by lena on 24.06.13.
//

#import "de/gmino/meva/shared/Entity.h"
#import "de/gmino/meva/shared/EntityFactory.h"
#import "de/gmino/meva/shared/EntityFactoryInterface.h"
#import "de/gmino/meva/shared/EntityTypeName.h"
#import "java/io/PrintStream.h"
#import "java/lang/Long.h"
#import "java/lang/RuntimeException.h"
#import "java/lang/System.h"
#import "java/util/ArrayList.h"
#import "java/util/Collection.h"
#import "java/util/Iterator.h"
#import "java/util/LinkedList.h"
#import "java/util/Map.h"
#import "java/util/TreeMap.h"

@implementation DeGminoMevaSharedEntityFactory

static id<DeGminoMevaSharedEntityFactoryInterface> DeGminoMevaSharedEntityFactory_factoryImplementation_;
static id<JavaUtilMap> DeGminoMevaSharedEntityFactory_entityMaps_;

+ (id<DeGminoMevaSharedEntityFactoryInterface>)factoryImplementation {
  return DeGminoMevaSharedEntityFactory_factoryImplementation_;
}

+ (void)setFactoryImplementation:(id<DeGminoMevaSharedEntityFactoryInterface>)factoryImplementation {
  DeGminoMevaSharedEntityFactory_factoryImplementation_ = factoryImplementation;
}

+ (id<JavaUtilMap>)entityMaps {
  return DeGminoMevaSharedEntityFactory_entityMaps_;
}

+ (void)setEntityMaps:(id<JavaUtilMap>)entityMaps {
  DeGminoMevaSharedEntityFactory_entityMaps_ = entityMaps;
}

+ (void)registerTypeWithNSString:(NSString *)typeName {
  if (DeGminoMevaSharedEntityFactory_entityMaps_ == nil) DeGminoMevaSharedEntityFactory_entityMaps_ = [[JavaUtilTreeMap alloc] init];
  if (![((id<JavaUtilMap>) NIL_CHK(DeGminoMevaSharedEntityFactory_entityMaps_)) containsKeyWithId:typeName]) {
    (void) [((id<JavaUtilMap>) NIL_CHK(DeGminoMevaSharedEntityFactory_entityMaps_)) putWithId:typeName withId:[[JavaUtilTreeMap alloc] init]];
    [((JavaIoPrintStream *) NIL_CHK([JavaLangSystem out])) printlnWithNSString:[NSString stringWithFormat:@"Registered domain type in EntityFactory: %@", typeName]];
  }
}

+ (id<JavaUtilCollection>)getUnloadedEntitiesByIdWithDeGminoMevaSharedEntityTypeName:(DeGminoMevaSharedEntityTypeName *)type
                                                              withJavaUtilCollection:(id<JavaUtilCollection>)ids {
  if (DeGminoMevaSharedEntityFactory_factoryImplementation_ == nil) @throw [[JavaLangRuntimeException alloc] initWithNSString:@"You must first call setImplementations."];
  [DeGminoMevaSharedEntityFactory registerTypeWithNSString:[((DeGminoMevaSharedEntityTypeName *) NIL_CHK(type)) description]];
  id<JavaUtilMap> mapForThisType = ((id<JavaUtilMap>) [((id<JavaUtilMap>) NIL_CHK(DeGminoMevaSharedEntityFactory_entityMaps_)) getWithId:[((DeGminoMevaSharedEntityTypeName *) NIL_CHK(type)) description]]);
  id<JavaUtilCollection> ret = [[JavaUtilArrayList alloc] initWithInt:[((id<JavaUtilCollection>) NIL_CHK(ids)) size]];
  {
    id<JavaUtilIterator> iter__ = ((id<JavaUtilIterator>) [((id<JavaUtilCollection>) NIL_CHK(ids)) iterator]);
    while ([((id<JavaUtilIterator>) NIL_CHK(iter__)) hasNext]) {
      JavaLangLong *id_ = ((JavaLangLong *) [((id<JavaUtilIterator>) NIL_CHK(iter__)) next]);
      id<DeGminoMevaSharedEntity> e = (id<DeGminoMevaSharedEntity>) ((id<DeGminoMevaSharedEntity>) [((id<JavaUtilMap>) NIL_CHK(mapForThisType)) getWithId:id_]);
      if (e == nil) {
        e = (id<DeGminoMevaSharedEntity>) [((id<DeGminoMevaSharedEntityFactoryInterface>) NIL_CHK(DeGminoMevaSharedEntityFactory_factoryImplementation_)) createEntityObjectWithNSString:[((DeGminoMevaSharedEntityTypeName *) NIL_CHK(type)) description] withLongInt:[((JavaLangLong *) NIL_CHK(id_)) longLongValue]];
        (void) [((id<JavaUtilMap>) NIL_CHK(mapForThisType)) putWithId:id_ withId:e];
      }
      [((id<JavaUtilCollection>) NIL_CHK(ret)) addWithId:e];
    }
  }
  return ret;
}

+ (id<DeGminoMevaSharedEntity>)getUnloadedEntityByIdWithDeGminoMevaSharedEntityTypeName:(DeGminoMevaSharedEntityTypeName *)type
                                                                            withLongInt:(long long int)id_ {
  id<JavaUtilCollection> idList = [[JavaUtilLinkedList alloc] init];
  [((id<JavaUtilCollection>) NIL_CHK(idList)) addWithId:[JavaLangLong valueOfWithLongInt:id_]];
  id<JavaUtilCollection> ret = ((id<JavaUtilCollection>) [DeGminoMevaSharedEntityFactory getUnloadedEntitiesByIdWithDeGminoMevaSharedEntityTypeName:type withJavaUtilCollection:idList]);
  if (ret == nil) return nil;
  return ((id<DeGminoMevaSharedEntity>) [((id<JavaUtilIterator>) [((id<JavaUtilCollection>) NIL_CHK(ret)) iterator]) next]);
}

+ (void)setImplementationsWithDeGminoMevaSharedEntityFactoryInterface:(id<DeGminoMevaSharedEntityFactoryInterface>)factory {
  DeGminoMevaSharedEntityFactory_factoryImplementation_ = factory;
}

- (id)init {
  return [super init];
}

@end
